
#定义LOG输出级别 分别有（ERROR、WARN、INFO、DEBUG）,优先级逐级递减
log4j.rootLogger=DEBUG,Console,File
#日志级别时info
log4j.appender.info.Threshold = INFO
#定义文件最大大小（超过就生成新的文件）
log4j.appender.File.MaxFileSize = 10MB
#按时间生成文件（指定monthly(每月)、 weekly(每周)、daily(每天)、half-daily(每半天)、hourly(每小时)和minutely(每分钟)）
#yyyy-MM,对应monthly(每月)
#yyyy-ww,对应weekly(每周)
#yyyy-MM-dd,对应daily(每天)
#yyyy-MM-dd-a,对应half-daily(每半天)
#yyyy-MM-dd-HH,对应hourly(每小时)
#yyyy-MM-dd-HH-mm,对应minutely(每分钟)
log4j.appender.info.DatePattern=yyyy-MM-dd'.log'
#定义日志输出目的地为控制台
log4j.appender.Console=org.apache.log4j.ConsoleAppender
log4j.appender.Console.Target=System.out
#可以灵活地指定日志输出格式
log4j.appender.Console.layout = org.apache.log4j.PatternLayout
#org.apache.log4j.HTMLLayout（以HTML表格形式布局）
#org.apache.log4j.PatternLayout（可以灵活地指定布局模式）
#org.apache.log4j.SimpleLayout（包含日志信息的级别和信息字符串）
#org.apache.log4j.TTCCLayout（包含日志产生的时间、线程、类别等等信息）
#指定具体的格式
log4j.appender.Console.layout.ConversionPattern=[%c] - %m%n
#指定输出目录
log4j.appender.File.File = logs/gi.log
#往日志文件追加
log4j.appender.info.append=true
# 输出所有日志，如果换成DEBUG表示输出DEBUG以上级别日志
log4j.appender.File.Threshold = ALL
log4j.appender.File.layout = org.apache.log4j.PatternLayout
log4j.appender.File.layout.ConversionPattern =[%p] [%d{yyyy-MM-dd HH\:mm\:ss}][%c]%m%n
#使用org.apache.log4j.PatternLayout时需要指定输出布局格式
log4j.appender.stdout.layout.ConversionPattern=[%-5p] %d{yyyy-MM-dd HH:mm:ss,SSS} method:%l%n%m%n
